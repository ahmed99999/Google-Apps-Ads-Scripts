<meta charset="UTF-8">
<title>SQL_Converter</title>
<body>
<pre id="output" style=""></pre>
<textarea style="visibility:hidden;width:12;height:12;">






-- my_sql_query
WITH
Segments AS (
	SELECT
		REGEXP_REPLACE( Segment, '[äÄöÖüÜß]', '_' ) AS Segment,
		Entities
	FROM (
		-- relevant entities for each type
		SELECT
			Type AS Segment,
			ARRAY_AGG( DISTINCT Entity ) AS Entities,
			COUNT( DISTINCT Query ) AS CountQueries
		FROM `biddy-io.regression.nl_entities`
		WHERE TRUE
			AND Type IN (
				'LOCATION',
				'NUMBER',
				'ADDRESS',
				'PRICE',
				'EVENT'
			)
		GROUP BY
			Type
		UNION ALL
		-- relevant types + entities
		SELECT
			CONCAT( Type, '_' , UPPER( REGEXP_REPLACE( Entity, ' ', '_' ) ) ) AS Segment,
			[ Entity ] AS Entities,
			COUNT( DISTINCT Query ) AS CountQueries
		FROM `biddy-io.regression.nl_entities`
		WHERE TRUE
			AND Type IN (
				'LOCATION',
				'NUMBER',
				'ADDRESS',
				'PRICE',
				'EVENT'
			)
		GROUP BY
			Type,
			Entity
	)
	WHERE TRUE
		AND CountQueries > 10
	ORDER BY
		CountQueries
),
Predicates AS (
	SELECT
		CONCAT(
			'CAST ( ',
			STRING_AGG( CONCAT( 'REGEXP_CONTAINS( Query, \'', Entity ,'\' )' ) , ' OR ' ),
			' AS INT64 ) AS Is',
			CONCAT( UPPER( SUBSTR( Segment, 1, 1 ) ), LOWER( SUBSTR( Segment, 2 ) ) )
		) AS Predicate
	FROM Segments, UNNEST( Entities ) AS Entity
	WHERE TRUE
	GROUP BY
		Segment
)
SELECT
	CONCAT(
		'SELECT\n\tdata.*,\t\n',
		STRING_AGG( Predicate, ',\n\t' ),
		'\n\tFROM `biddy-io.regression.preprocessed_data` data'
	) AS Sql
FROM Predicates




























</textarea>

</body>
<script>

var BIGQUERY_PROJECT_ID = 'biddy-io';
var BIGQUERY_DATASET_ID = 'regression';
var MCC_ID = 1036246249;
var VIEW_PREFIX = '2';


var ta = document.querySelector('textarea');
var queries = ta.value.split( '\n\n' ).map( a => a.trim() ).filter( a => a.length > 0 );

var res = '';

queries.forEach( query => {
	var split = query.split('\n');

	var first = '';
	if( split[ 0 ].substring( 0, 2 ) == '--' ){
		first = '\n\t' + split[ 0 ].substring( 3 ).toUpperCase() + ' : [\n';
		split.shift();
	}

	res += first + split
		.map( row => row.replace( /\\/g, '\\\\' ) )
		.map( row => row.replace( /'/g, '\\\'' ) )
		.map( row => row.replace( new RegExp( '`' + BIGQUERY_PROJECT_ID + '.' + BIGQUERY_DATASET_ID + '.', 'g'),
			'`\' + BIGQUERY.PROJECT_ID + \'\.\' + BIGQUERY.DATASET_ID + \'\.' ) )
		.map( row => row.replace( new RegExp( MCC_ID + '`', 'g' ), '\' + ACCOUNT_ID + \'`' ) )
		.map( row => '\t\t\'' + row + '\',' )
		.map( row => row.replace( new RegExp( '\\.' + VIEW_PREFIX ), '.\' + VIEW_PREFIX + \'' ) )
		.join('\n')
		+ '\n\t].join( \'\\n\' ),'
	;
});
document.getElementById( 'output' ).innerHTML = res;

//ta.focus();
//setTimeout( 'ta.select();', 200 );

</script>